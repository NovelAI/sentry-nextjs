{"version":3,"file":"webpack.js","sourceRoot":"","sources":["../../src/config/webpack.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\r\nimport { getSentryRelease } from '@sentry/node';\r\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\r\nimport { default as SentryWebpackPlugin } from '@sentry/webpack-plugin';\r\nimport * as fs from 'fs';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\n\r\nimport {\r\n  BuildContext,\r\n  EntryPropertyObject,\r\n  NextConfigObject,\r\n  SentryWebpackPluginOptions,\r\n  WebpackConfigFunction,\r\n  WebpackConfigObject,\r\n  WebpackEntryProperty,\r\n} from './types';\r\n\r\nexport { SentryWebpackPlugin };\r\n\r\n// TODO: merge default SentryWebpackPlugin ignore with their SentryWebpackPlugin ignore or ignoreFile\r\n// TODO: merge default SentryWebpackPlugin include with their SentryWebpackPlugin include\r\n// TODO: drop merged keys from override check? `includeDefaults` option?\r\n\r\n/**\r\n * Construct the function which will be used as the nextjs config's `webpack` value.\r\n *\r\n * Sets:\r\n *   - `devtool`, to ensure high-quality sourcemaps are generated\r\n *   - `entry`, to include user's sentry config files (where `Sentry.init` is called) in the build\r\n *   - `plugins`, to add SentryWebpackPlugin (TODO: optional)\r\n *\r\n * @param userNextConfig The user's existing nextjs config, as passed to `withSentryConfig`\r\n * @param userSentryWebpackPluginOptions The user's SentryWebpackPlugin config, as passed to `withSentryConfig`\r\n * @returns The function to set as the nextjs config's `webpack` value\r\n */\r\nexport function constructWebpackConfigFunction(\r\n  userNextConfig: Partial<NextConfigObject> = {},\r\n  userSentryWebpackPluginOptions: Partial<SentryWebpackPluginOptions> = {},\r\n): WebpackConfigFunction {\r\n  // Will be called by nextjs and passed its default webpack configuration and context data about the build (whether\r\n  // we're building server or client, whether we're in dev, what version of webpack we're using, etc). Note that\r\n  // `incomingConfig` and `buildContext` are referred to as `config` and `options` in the nextjs docs.\r\n  const newWebpackFunction = (incomingConfig: WebpackConfigObject, buildContext: BuildContext): WebpackConfigObject => {\r\n    let newConfig = { ...incomingConfig };\r\n\r\n    // if user has custom webpack config (which always takes the form of a function), run it so we have actual values to\r\n    // work with\r\n    if ('webpack' in userNextConfig && typeof userNextConfig.webpack === 'function') {\r\n      newConfig = userNextConfig.webpack(newConfig, buildContext);\r\n    }\r\n\r\n    // Tell webpack to inject user config files (containing the two `Sentry.init()` calls) into the appropriate output\r\n    // bundles. Store a separate reference to the original `entry` value to avoid an infinite loop. (If we don't do\r\n    // this, we'll have a statement of the form `x.y = () => f(x.y)`, where one of the things `f` does is call `x.y`.\r\n    // Since we're setting `x.y` to be a callback (which, by definition, won't run until some time later), by the time\r\n    // the function runs (causing `f` to run, causing `x.y` to run), `x.y` will point to the callback itself, rather\r\n    // than its original value. So calling it will call the callback which will call `f` which will call `x.y` which\r\n    // will call the callback which will call `f` which will call `x.y`... and on and on. Theoretically this could also\r\n    // be fixed by using `bind`, but this is way simpler.)\r\n    const origEntryProperty = newConfig.entry;\r\n    newConfig.entry = async () => addSentryToEntryProperty(origEntryProperty, buildContext);\r\n\r\n    // In webpack 5, you can get webpack to replace any module you'd like with an empty object, just by setting its\r\n    // `resolve.alias` value to `false`. Not much of our code is neatly separated into \"things node needs\" and \"things\r\n    // the browser needs,\" but where it is, we can save ~1.6 kb in eventual bundle size by excluding code we know we\r\n    // don't need. (Normally this would only matter for the client side, but because vercel turns backend code into\r\n    // serverless functions, it's worthwhile to do it for both.)\r\n    if (buildContext.webpack.version.startsWith('5')) {\r\n      const excludedTracingDir = buildContext.isServer ? 'browser' : 'integrations/node';\r\n      newConfig.resolve = {\r\n        ...newConfig.resolve,\r\n        alias: {\r\n          ...newConfig.resolve?.alias,\r\n          [path.resolve(buildContext.dir, `./node_modules/@sentry/tracing/esm/${excludedTracingDir}`)]: false,\r\n          // TODO It's not clear if it will ever pull from `dist` (in testing it never does), so we may not need this.\r\n          [path.resolve(buildContext.dir, `./node_modules/@sentry/tracing/dist/${excludedTracingDir}`)]: false,\r\n        },\r\n      };\r\n    }\r\n\r\n    // Enable the Sentry plugin (which uploads source maps to Sentry when not in dev) by default\r\n    const enableWebpackPlugin = buildContext.isServer\r\n      ? !userNextConfig.sentry?.disableServerWebpackPlugin\r\n      : !userNextConfig.sentry?.disableClientWebpackPlugin;\r\n\r\n    if (enableWebpackPlugin) {\r\n      // TODO Handle possibility that user is using `SourceMapDevToolPlugin` (see\r\n      // https://webpack.js.org/plugins/source-map-dev-tool-plugin/)\r\n      // TODO Give user option to use `hidden-source-map` ?\r\n\r\n      // Next doesn't let you change this is dev even if you want to - see\r\n      // https://github.com/vercel/next.js/blob/master/errors/improper-devtool.md\r\n      if (!buildContext.dev) {\r\n        newConfig.devtool = 'source-map';\r\n      }\r\n\r\n      newConfig.plugins = newConfig.plugins || [];\r\n      newConfig.plugins.push(\r\n        new SentryWebpackPlugin(getWebpackPluginOptions(buildContext, userSentryWebpackPluginOptions)),\r\n      );\r\n    }\r\n\r\n    return newConfig;\r\n  };\r\n\r\n  return newWebpackFunction;\r\n}\r\n\r\n/**\r\n * Modify the webpack `entry` property so that the code in `sentry.server.config.js` and `sentry.client.config.js` is\r\n * included in the the necessary bundles.\r\n *\r\n * @param currentEntryProperty The value of the property before Sentry code has been injected\r\n * @param buildContext Object passed by nextjs containing metadata about the build\r\n * @returns The value which the new `entry` property (which will be a function) will return (TODO: this should return\r\n * the function, rather than the function's return value)\r\n */\r\nasync function addSentryToEntryProperty(\r\n  currentEntryProperty: WebpackEntryProperty,\r\n  buildContext: BuildContext,\r\n): Promise<EntryPropertyObject> {\r\n  // The `entry` entry in a webpack config can be a string, array of strings, object, or function. By default, nextjs\r\n  // sets it to an async function which returns the promise of an object of string arrays. Because we don't know whether\r\n  // someone else has come along before us and changed that, we need to check a few things along the way. The one thing\r\n  // we know is that it won't have gotten *simpler* in form, so we only need to worry about the object and function\r\n  // options. See https://webpack.js.org/configuration/entry-context/#entry.\r\n\r\n  const newEntryProperty =\r\n    typeof currentEntryProperty === 'function' ? await currentEntryProperty() : { ...currentEntryProperty };\r\n\r\n  // `sentry.server.config.js` or `sentry.client.config.js` (or their TS equivalents)\r\n  const userConfigFile = buildContext.isServer\r\n    ? getUserConfigFile(buildContext.dir, 'server')\r\n    : getUserConfigFile(buildContext.dir, 'client');\r\n\r\n  // we need to turn the filename into a path so webpack can find it\r\n  const filesToInject = [`./${userConfigFile}`];\r\n\r\n  // Support non-default output directories by making the output path (easy to get here at build-time) available to the\r\n  // server SDK's default `RewriteFrames` instance (which needs it at runtime). Doesn't work when using the dev server\r\n  // because it somehow tricks the file watcher into thinking that compilation itself is a file change, triggering an\r\n  // infinite recompiling loop. (This should be fine because we don't upload sourcemaps in dev in any case.)\r\n  if (buildContext.isServer && !buildContext.dev) {\r\n    const rewriteFramesHelper = path.resolve(\r\n      fs.mkdtempSync(path.resolve(os.tmpdir(), 'sentry-')),\r\n      'rewriteFramesHelper.js',\r\n    );\r\n    fs.writeFileSync(rewriteFramesHelper, `global.__rewriteFramesDistDir__ = '${buildContext.config.distDir}';\\n`);\r\n    // stick our helper file ahead of the user's config file so the value is in the global namespace *before*\r\n    // `Sentry.init()` is called\r\n    filesToInject.unshift(rewriteFramesHelper);\r\n  }\r\n\r\n  // inject into all entry points which might contain user's code\r\n  for (const entryPointName in newEntryProperty) {\r\n    if (shouldAddSentryToEntryPoint(entryPointName)) {\r\n      addFilesToExistingEntryPoint(newEntryProperty, entryPointName, filesToInject);\r\n    }\r\n  }\r\n\r\n  return newEntryProperty;\r\n}\r\n\r\n/**\r\n * Search the project directory for a valid user config file for the given platform, allowing for it to be either a\r\n * TypeScript or JavaScript file.\r\n *\r\n * @param projectDir The root directory of the project, where the file should be located\r\n * @param platform Either \"server\" or \"client\", so that we know which file to look for\r\n * @returns The name of the relevant file. If no file is found, this method throws an error.\r\n */\r\nexport function getUserConfigFile(projectDir: string, platform: 'server' | 'client'): string {\r\n  const possibilities = [`sentry.${platform}.config.ts`, `sentry.${platform}.config.js`];\r\n\r\n  for (const filename of possibilities) {\r\n    if (fs.existsSync(path.resolve(projectDir, filename))) {\r\n      return filename;\r\n    }\r\n  }\r\n\r\n  throw new Error(`Cannot find '${possibilities[0]}' or '${possibilities[1]}' in '${projectDir}'.`);\r\n}\r\n\r\n/**\r\n * Add files to a specific element of the given `entry` webpack config property.\r\n *\r\n * @param entryProperty The existing `entry` config object\r\n * @param entryPointName The key where the file should be injected\r\n * @param filepaths An array of paths to the injected files\r\n */\r\nfunction addFilesToExistingEntryPoint(\r\n  entryProperty: EntryPropertyObject,\r\n  entryPointName: string,\r\n  filepaths: string[],\r\n): void {\r\n  // can be a string, array of strings, or object whose `import` property is one of those two\r\n  const currentEntryPoint = entryProperty[entryPointName];\r\n  let newEntryPoint = currentEntryPoint;\r\n\r\n  if (typeof currentEntryPoint === 'string') {\r\n    newEntryPoint = [...filepaths, currentEntryPoint];\r\n  } else if (Array.isArray(currentEntryPoint)) {\r\n    newEntryPoint = [...filepaths, ...currentEntryPoint];\r\n  }\r\n  // descriptor object (webpack 5+)\r\n  else if (typeof currentEntryPoint === 'object' && 'import' in currentEntryPoint) {\r\n    const currentImportValue = currentEntryPoint.import;\r\n    let newImportValue;\r\n\r\n    if (typeof currentImportValue === 'string') {\r\n      newImportValue = [...filepaths, currentImportValue];\r\n    } else {\r\n      newImportValue = [...filepaths, ...currentImportValue];\r\n    }\r\n\r\n    newEntryPoint = {\r\n      ...currentEntryPoint,\r\n      import: newImportValue,\r\n    };\r\n  }\r\n  // malformed entry point (use `console.error` rather than `logger.error` because it will always be printed, regardless\r\n  // of SDK settings)\r\n  else {\r\n    // eslint-disable-next-line no-console\r\n    console.error(\r\n      'Sentry Logger [Error]:',\r\n      `Could not inject SDK initialization code into entry point ${entryPointName}, as its current value is not in a recognized format.\\n`,\r\n      `Expected: string | Array<string> | { [key:string]: any, import: string | Array<string> }\\n`,\r\n      `Got: ${currentEntryPoint}`,\r\n    );\r\n  }\r\n\r\n  entryProperty[entryPointName] = newEntryPoint;\r\n}\r\n\r\n/**\r\n * Check the SentryWebpackPlugin options provided by the user against the options we set by default, and warn if any of\r\n * our default options are getting overridden. (Note: If any of our default values is undefined, it won't be included in\r\n * the warning.)\r\n *\r\n * @param defaultOptions Default SentryWebpackPlugin options\r\n * @param userOptions The user's SentryWebpackPlugin options\r\n */\r\nfunction checkWebpackPluginOverrides(\r\n  defaultOptions: SentryWebpackPluginOptions,\r\n  userOptions: Partial<SentryWebpackPluginOptions>,\r\n): void {\r\n  // warn if any of the default options for the webpack plugin are getting overridden\r\n  const sentryWebpackPluginOptionOverrides = Object.keys(defaultOptions).filter(key => key in userOptions);\r\n  if (sentryWebpackPluginOptionOverrides.length > 0) {\r\n    logger.warn(\r\n      '[Sentry] You are overriding the following automatically-set SentryWebpackPlugin config options:\\n' +\r\n        `\\t${sentryWebpackPluginOptionOverrides.toString()},\\n` +\r\n        \"which has the possibility of breaking source map upload and application. This is only a good idea if you know what you're doing.\",\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Determine if this is an entry point into which both `Sentry.init()` code and the release value should be injected\r\n *\r\n * @param entryPointName The name of the entry point in question\r\n * @returns `true` if sentry code should be injected, and `false` otherwise\r\n */\r\nfunction shouldAddSentryToEntryPoint(entryPointName: string): boolean {\r\n  return entryPointName === 'pages/_app' || entryPointName.includes('pages/api');\r\n}\r\n\r\n/**\r\n * Combine default and user-provided SentryWebpackPlugin options, accounting for whether we're building server files or\r\n * client files.\r\n *\r\n * @param buildContext Nexjs-provided data about the current build\r\n * @param userPluginOptions User-provided SentryWebpackPlugin options\r\n * @returns Final set of combined options\r\n */\r\nexport function getWebpackPluginOptions(\r\n  buildContext: BuildContext,\r\n  userPluginOptions: Partial<SentryWebpackPluginOptions>,\r\n): SentryWebpackPluginOptions {\r\n  const { isServer, dir: projectDir, buildId, dev: isDev, config: nextConfig, webpack } = buildContext;\r\n  const distDir = nextConfig.distDir ?? '.next'; // `.next` is the default directory\r\n\r\n  const isWebpack5 = webpack.version.startsWith('5');\r\n  const isServerless = nextConfig.target === 'experimental-serverless-trace';\r\n  const hasSentryProperties = fs.existsSync(path.resolve(projectDir, 'sentry.properties'));\r\n  const urlPrefix = nextConfig.basePath ? `~${nextConfig.basePath}/_next` : '~/_next';\r\n\r\n  const serverInclude = isServerless\r\n    ? [{ paths: [`${distDir}/serverless/`], urlPrefix: `${urlPrefix}/serverless` }]\r\n    : [{ paths: [`${distDir}/server/pages/`], urlPrefix: `${urlPrefix}/server/pages` }].concat(\r\n        isWebpack5 ? [{ paths: [`${distDir}/server/chunks/`], urlPrefix: `${urlPrefix}/server/chunks` }] : [],\r\n      );\r\n\r\n  const clientInclude = [{ paths: [`${distDir}/static/chunks/pages`], urlPrefix: `${urlPrefix}/static/chunks/pages` }];\r\n\r\n  const defaultPluginOptions = dropUndefinedKeys({\r\n    include: isServer ? serverInclude : clientInclude,\r\n    ignore: [],\r\n    url: process.env.SENTRY_URL,\r\n    org: process.env.SENTRY_ORG,\r\n    project: process.env.SENTRY_PROJECT,\r\n    authToken: process.env.SENTRY_AUTH_TOKEN,\r\n    configFile: hasSentryProperties ? 'sentry.properties' : undefined,\r\n    stripPrefix: ['webpack://_N_E/'],\r\n    urlPrefix,\r\n    entries: shouldAddSentryToEntryPoint,\r\n    release: getSentryRelease(buildId),\r\n    dryRun: isDev,\r\n  });\r\n\r\n  checkWebpackPluginOverrides(defaultPluginOptions, userPluginOptions);\r\n\r\n  return { ...defaultPluginOptions, ...userPluginOptions };\r\n}\r\n"]}